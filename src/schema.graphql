# this file is to expose to Methods to the front end
# import * from './generated/prisma.graphql'

# Implementation of Mutations are in Mutations.js
type SuccessMessage{
    message: String
}
type Mutation{
    createItem(title: String, description: String, image: String, largeImage: String, price: Int, cost: Int) : Item!
    updateItem(id:ID!, title: String, description: String, price: Int, cost: Int) : Item!
    deleteItem(id:ID!) : Item
    signup(email: String!, password: String!, name: String!): User!
    signin(email:String!, password: String!): User!
    signout: SuccessMessage
    confirmUser(id:ID!) : SuccessMessage
    requestReset(email: String!): SuccessMessage
    resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
    updatePermissions(permissions: [Permission], userId: ID!) : User!
    addToCart(id: ID!) : CartItem
    removeFromCart(id: ID!) : CartItem
    createOrderRequest(name: String!, account: String!): Order!
    updateOrderStatus(id:ID!, status: String!) : SuccessMessage
}

# Implementation of Query are in Query.js
type Query{
    items(where:ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first:Int): [Item]!
    item(where: ItemWhereUniqueInput!) : Item
    itemsConnection(where: ItemWhereInput) : ItemConnection!
    me: User
    users: [User]!
    order(id:ID!): Order
    orders(where:OrderWhereInput, orderBy: OrderOrderByInput): [Order]!
    ordersByUser(where:OrderWhereInput, orderBy: OrderOrderByInput): [Order]!
    searchOrders(searchTerm: String!): [Order]!
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  confirmed: Boolean!
  cart: [CartItem!]!
}